#include<bits/stdc++.h>    // T.C : O(n log n)
using namespace std;
const int N = 1e6+10;
int n;
long long m;
long long trees[N];

bool isWoodSufficient(int h){    // O(n)
    long long wood = 0;
    for(int i=0;i<n;i++){
        if(trees[i] >= h){
            wood += (trees[i] - h);
        }
    }
    return wood >= m;
    // if(wood>=m) return true;
    // return false;
}
 
int main(){

    cin>>n>>m;     // 4 7 
    for(int i=0;i<n;i++)
        cin>>trees[i];       // 20 15 10 17

    long long lo = 0, hi = 1e9,mid;
    // TTTTTTTFFFFFFFF   Predicate function
    // We have to find the last true value
        
    while(hi-lo > 1){            // O(log n(O(n))) = O(n log n)
        mid = (hi+lo)/2;
        if(isWoodSufficient(mid)){
            lo = mid;
        }
        else
            hi = mid-1;
    }
    if(isWoodSufficient(hi))
        cout<<hi<<endl;
    else
        cout<<lo<<endl;
}
